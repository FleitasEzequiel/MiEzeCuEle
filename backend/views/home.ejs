<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>MiEzeCuEle</title>
</head>
<body style="padding: 0; margin: 0; display: flex; flex-direction: row; height: 100vh;">   
    <div class="sideBar" >
        <div style="border-bottom-width: 2px;border-bottom-style: solid;border-color:gray">
            <div name="database" class="selectDb" onclick="renderPopup()">Database</div>
            <!-- <select name="database" class="selectDb" id="" onchange="renderSideBar(event.target.value);">
                <% info.dbs.forEach(element => {%>
                    <option ><%=element.database%></option>
                    <%}); %>
                </select> -->
        </div>
        <div class="tablesDisplay" onclick="event.currentTarget.toggleAttribute('open')">
        </div>
    </div>
    <main style="display:inline-flex; width: 80%; flex-direction: column;">
        <!-- <div style="display: flex; flex-direction: column;">
            <% if (info.error) { %>
            <div style="display: flex; background-color: rgb(255, 112, 112); margin:10px; border-radius: 16px; padding:4px;">
                <h1><%- info.error %></h1>
            </div>
            <% } %> -->

            <form method="post" class="Input" >
                <input type="hidden" name="Database">
                    <div class="inputHeader" style="display:flex;height:15%;width: 100%; justify-content: end;"> <button class="buttonPrimary">Query</button></div>
                    <div class="inputText" style="display: flex; height: 85%;width: 100%; padding: 2px 0;">
                         <textarea name="query" ></textarea>
                        </div>
            </form>
            <div class="Output" >
                <div class="outputHeader">
                </div>
                <div class="outputTable">

                </div>
            </div>
            <!-- <div class="query" style="display:flex; justify-content: center; align-items: center; background-color: wheat; min-height: 60vh;">
                <form method="post">
                    <input type="text" name="query" placeholder="Escribir consulta acá...">
                    <button>Query</button>
                </form>
            </div>
            <div style="display: flex; flex-direction: column; width: 100%; align-items: center;">
                
            </div>
        </div> -->
    </main>


<style>
:root{
    --primary: #1f7a8c;
    --secondary: #bfdbf7;
    --light: #ffffff;
    --gray: #e1e5f2;
    --contrast: #caceda;
    --dark: #022b3a;}
    /* Tablas */
    th{
        background-color: var(--light) 
    }
    tr{
        background-color: var(--gray);
    }
    table{
        background-color:var(--contrast);
    }
    .sideBar{
        border-color:var(--gray);
        position: static;
        width: 20%;
        border-right: 2px solid var(--contrast);
        height: 100vh;
    }
    .tablesDisplay{
        background-color: red;
        max-height: 100%;
        overflow: hidden;
    }
    .tables{
        display: flex;
        flex-direction: column;
        height: 85vh;
        overflow: scroll;
    }
    .selectDb{
        height: 10vh;
        width: 90%;
        text-align: center;
        margin:10px;
        border-radius: 8px;
        border:0px; 
        outline: 0px;
    }
    .buttonPrimary{
        background-color: var(--primary);
        border: 0px;
        border-radius: 6px;
        color: var(--light);
        margin:4px;
        padding: 0 10px;
    }
    .Input{
        display:flex;
        flex-direction:column; 
        background-color: var(--light);
        min-height: 45%;
    }
    [name='query']{
        width: 100%;
        border:0px;
        outline: 0;
        resize: none;
    }
    .inputHeader{
        background-color: var(--gray);
        border-bottom: 2px solid var(--contrast);
    }
    .Output{
        display:flex; 
        min-height: 55%;
        flex-direction: column;
    }
    .outputHeader{
        background-color: var(--gray);
        border-top: 2px solid var(--contrast) ;
        border-bottom: 2px solid var(--contrast) ;
        
    }
    .outputTable{
        display: flex;
        overflow: scroll;
    }
    .dbBox{
        display:flex; 
        background-color:var(--light);
        height:70vh; 
        width:70vw;
        justify-content: center;
    }
    .dbCollection{
        display: flex;
        flex-direction: column;
        width: 70%;
        height: 60vh;
        margin-top:10vh;
        overflow-y: scroll;
        gap:10px;
    }
    .dbOption{
        display:flex;
        justify-content: center;
        align-items: center;
        border: 2px solid var(--contrast);
        border-radius: 8px;
        height: 20vh;
        animation: appearDown 0.5s linear
    }
    .dbOption:hover{
        transform: scale(0.95,1);
        transition: all 0.2s ease-in-out;
    }
    @keyframes appearDown {
        from{
            transform: translateY(4vh);
            opacity: 0;
        }
        to{
            transform: translateY(0);
            opacity: 1;
        }
    }
</style>
<script>
    //         `
    function renderOutput(){
        const $output = document.querySelector(".outputTable")
        const $header = document.querySelector(".outputHeader")
        try {
            const result = JSON.parse('<%-JSON.stringify(info.result)%>') 


            $table = document.createElement("table")
            $tableHeader = document.createElement("tr")
            result[1].forEach((col)=>{
                $th = document.createElement("th")
                $th.innerText = col.name
                $tableHeader.appendChild($th)
            })
            $table.appendChild($tableHeader)
            result[0].forEach((row)=>{
                $tr = document.createElement("tr")
                Object.values(row).forEach((col)=>{
                    $td = document.createElement("td")
                    $td.innerText = col
                    $tr.appendChild($td)
                })
                $table.appendChild($tr)
            })
            $output.appendChild($table)
            $header.innerText = "Input: Success"
        } catch (error) {
            $header.innerText = "Input: Error"
            $output.innerText = '<%-info.error%>'
        }
    }
    function renderSideBar(){
            const database = document.querySelector("[name='database']").value || "mysql"
            document.querySelector("[name='Database']").value = database
            const info = JSON.parse('<%-JSON.stringify(info.dbs)%>')
            const index = info.findIndex((el)=>el.database == database)
        const $tablesDisplay = document.querySelector(".tablesDisplay")
        $tablesDisplay.innerHTML = ""

        const $tables = document.createElement("div")
        $tables.className = "tables"
        const $sectionTitle = document.createElement("p")
        $sectionTitle.textContent = "Tables" 
        
        $tables.appendChild($sectionTitle)
        info[index].tables.forEach(table => {
            const $table = document.createElement("div")
            $table.innerText = table
            $table.className = "table"
            $tables.appendChild($table)
        });
        $tablesDisplay.appendChild($tables)
    }
    renderSideBar()
    renderOutput()



    document.querySelector("[name='query']").addEventListener("input",(e)=>{
        const span = e.target.innerHTML
        let text = span.split(' ')
        const index = text.findIndex((word)=>word=='Hola') 
        if (index !== -1){
            text[index] = '<a style="color:red">Hola</a>'
        }
        const newString = text.toString().split(',').join(" ")
        if (e.target.innerHTML !== text.toString().split(',').join(" ")){
            console.log('OH NIO')
            e.target.innerHTML = ''
            e.target.insertAdjacentHTML("beforeBegin",text.toString().split(',').join(" ") );
        }
        // e.target.insertAdjacentHTML("") = 
    })
    document.addEventListener("input",(e)=>{
        if (e.data == "d"){
        }
    })

    const renderPopup = () =>{
        const info = JSON.parse('<%-JSON.stringify(info.dbs)%>')
        console.log(info)
        const $background = document.createElement("div")
            const $div = document.createElement("div")
            $background.addEventListener("click",()=>{
                $background.remove()})
            const $collection = document.createElement("div")
            $collection.className = "dbCollection"
            info.forEach((db)=>{
                const $db = document.createElement("div")
                $db.className = "dbOption"
                $db.innerText = db.database
                $db.addEventListener("click",()=>{
                    document.querySelector("[name='Database']").value = db.database
                })
                $collection.appendChild($db)
            })
            

            const $db = document.createElement("div")
                $db.className = "dbOption"
                $db.innerText = "Añadir"
                $collection.appendChild($db)
            
            $div.className = "dbBox"
            $background.style = " background-color:rgba(0,0,0,0.5); height:100vh;width:100vw;position:absolute;z-index:20; display:flex; justify-content:center;align-items:center"
            $div.appendChild($collection)
            $background.appendChild($div)
            document.body.appendChild($background)
    }
    renderPopup()

    
    // const dD = document.querySelectorAll('.DatabaseDropdown')
    // dD.forEach((element,key) => {
    //     element.addEventListener(('click'),e=>
    // {
    //         if (e.target.getAttribute('open') == 'true'){
    //             e.target.setAttribute('open','false')
    //         }else{
    //                     e.target.setAttribute('open','true')
    //                 }
    // })})
</script>
</html>
 